<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Whack A Mole!</title>
  <link href='https://fonts.googleapis.com/css?family=Amatic+SC:400,700' rel='stylesheet' type='text/css'>
  <link rel="stylesheet" href="style.css">
</head>
<body>

  <h1>Whack-a-mole! <span class="score">0</span></h1>
  <button onClick="startGame()">Start!</button>

  <div class="game">
    <div class="hole hole1">
      <div class="mole"></div>
    </div>
    <div class="hole hole2">
      <div class="mole"></div>
    </div>
    <div class="hole hole3">
      <div class="mole"></div>
    </div>
    <div class="hole hole4">
      <div class="mole"></div>
    </div>
    <div class="hole hole5">
      <div class="mole"></div>
    </div>
    <div class="hole hole6">
      <div class="mole"></div>
    </div>
  </div>

<script>
  const holes = document.querySelectorAll('.hole');
  const scoreBoard = document.querySelector('.score');
  const moles = document.querySelectorAll('.mole');
  let lasthole
  let timeup = false

  function randomTime(min, max) {
      return Math.round(Math.random() * (max-min) + min)
      // this is set a random time
  };

  function randomHole(holes) {
      const id = Math.floor(Math.random() * holes.length)
      const hole = holes[id];
      // this is to set a random hole from index 0 to 5
      if (hole == lasthole) {
          return randomHole(holes)
      }

      lasthole = hole;
      return hole
  }

  let count = 0;

  function peep(){
      const time = randomTime(200, 2000);
      const hole = randomHole(holes);
      hole.classList.add('up');
      // in css it has class up to set the top to be 0, then the mole can pop up
   
      setTimeout(() => {
          hole.classList.remove('up');
          if (timeup == false)
          peep();
        }, time)
        // set if timeup is false so this game has a time limit, otherwise it will last for ever
        // settimeout is for each mole has its time limit, it will be remove after this time
    }


   function startGame() {
       timeup = false;
       scoreBoard.innerHTML = 0;
       count = 0
       peep();
       setTimeout(() => timeup = true, 10000)
       // this is to set the game time to be 10seconds

   }

   function clickMole(e) {
       if (e.isTrusted = false) return;
       // e.isTrusted means it is clicked on this event, so if it is not click, then return to nothing
       count += 1;
       this.classList.remove('up');
       // after it is clicked, the mole can be removed even if the time is not up yet
      scoreBoard.innerHTML = count;
   }

   moles.forEach(mole => mole.addEventListener('click', clickMole))


</script>

<style>
html {
    box-sizing: border-box;
    font-size: 10px;
    background: #ffc600;
  }
  
  *, *:before, *:after {
    box-sizing: inherit;
  }
  
  body {
    padding: 0;
    margin: 0;
    font-family: 'Amatic SC', cursive;
  }
  
  h1 {
    text-align: center;
    font-size: 10rem;
    line-height: 1;
    margin-bottom: 0;
  }
  
  .score {
    background: rgba(255,255,255,0.2);
    padding: 0 3rem;
    line-height: 1;
    border-radius: 1rem;
  }
  
  .game {
    width: 600px;
    height: 400px;
    display: flex;
    flex-wrap: wrap;
    margin: 0 auto;
  }
  
  .hole {
    flex: 1 0 33.33%;
    overflow: hidden;
    position: relative;
  }
  
  .hole:after {
    display: block;
    background: url(images/dirt.svg) bottom center no-repeat;
    background-size: contain;
    content: '';
    width: 100%;
    height:70px;
    position: absolute;
    z-index: 2;
    bottom: -30px;
  }
  
  .mole {
    background: url('images/mole.svg') bottom center no-repeat;
    background-size: 60%;
    position: absolute;
    top: 100%;
    width: 100%;
    height: 100%;
    transition:all 0.4s;
  }
  
  .hole.up .mole {
    top: 0;
  }
  
</style>
</body>
</html>
